{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { initialState } from './store';\nimport { addContact, removeContact, setContacts, setFilters } from './actions'; // export const rootReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case 'contacts/addContact':\n//       return { ...state, contacts: [...state.contacts, action.payload] };\n//     case 'contacts/removeContact':\n//       return {\n//         ...state,\n//         contacts: state.contacts.filter(\n//           contact => contact.id !== action.payload\n//         ),\n//       };\n//     case 'contacts/setContacts':\n//       return { ...state, contacts: [...action.payload] };\n//     case 'contacts/setFilters':\n//       return { ...state, filter: action.payload };\n//     default:\n//       return;\n//   }\n// };\n\nexport const rootReduce = createReducer(state = initialState, {\n  [addContact]: (state, action) => {\n    return { ...state,\n      contacts: [...state.contacts, action.payload]\n    };\n  },\n  [removeContact]: (state, action) => {\n    return { ...state,\n      contacts: state.contacts.filter(contact => contact.id !== action.payload)\n    };\n  },\n  [setContacts]: (state, action) => {\n    return { ...state,\n      contacts: [...action.payload]\n    };\n  },\n  [setFilters]: (state, action) => {\n    return { ...state,\n      filter: action.payload\n    };\n  }\n});","map":{"version":3,"sources":["M:/programy/Programy_kodowanie/github/goit-react-hw-06-phonebook/src/redux/reducers.js"],"names":["createReducer","initialState","addContact","removeContact","setContacts","setFilters","rootReduce","state","action","contacts","payload","filter","contact","id"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,WAApC,EAAiDC,UAAjD,QAAmE,WAAnE,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGN,aAAa,CAAEO,KAAK,GAAGN,YAAV,EAAyB;AAC9D,GAACC,UAAD,GAAc,CAACK,KAAD,EAAQC,MAAR,KAAmB;AAC/B,WAAO,EAAE,GAAGD,KAAL;AAAYE,MAAAA,QAAQ,EAAE,CAAC,GAAGF,KAAK,CAACE,QAAV,EAAoBD,MAAM,CAACE,OAA3B;AAAtB,KAAP;AACD,GAH6D;AAI9D,GAACP,aAAD,GAAiB,CAACI,KAAD,EAAQC,MAAR,KAAmB;AAClC,WAAO,EACL,GAAGD,KADE;AAELE,MAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAeE,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACE,OAAvD;AAFL,KAAP;AAID,GAT6D;AAU9D,GAACN,WAAD,GAAe,CAACG,KAAD,EAAQC,MAAR,KAAmB;AAChC,WAAO,EAAE,GAAGD,KAAL;AAAYE,MAAAA,QAAQ,EAAE,CAAC,GAAGD,MAAM,CAACE,OAAX;AAAtB,KAAP;AACD,GAZ6D;AAa9D,GAACL,UAAD,GAAc,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAC/B,WAAO,EAAE,GAAGD,KAAL;AAAYI,MAAAA,MAAM,EAAEH,MAAM,CAACE;AAA3B,KAAP;AACD;AAf6D,CAAzB,CAAhC","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\r\nimport { initialState } from './store';\r\nimport { addContact, removeContact, setContacts, setFilters } from './actions';\r\n\r\n// export const rootReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case 'contacts/addContact':\r\n//       return { ...state, contacts: [...state.contacts, action.payload] };\r\n//     case 'contacts/removeContact':\r\n//       return {\r\n//         ...state,\r\n//         contacts: state.contacts.filter(\r\n//           contact => contact.id !== action.payload\r\n//         ),\r\n//       };\r\n//     case 'contacts/setContacts':\r\n//       return { ...state, contacts: [...action.payload] };\r\n//     case 'contacts/setFilters':\r\n//       return { ...state, filter: action.payload };\r\n//     default:\r\n//       return;\r\n//   }\r\n// };\r\n\r\nexport const rootReduce = createReducer((state = initialState), {\r\n  [addContact]: (state, action) => {\r\n    return { ...state, contacts: [...state.contacts, action.payload] };\r\n  },\r\n  [removeContact]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      contacts: state.contacts.filter(contact => contact.id !== action.payload),\r\n    };\r\n  },\r\n  [setContacts]: (state, action) => {\r\n    return { ...state, contacts: [...action.payload] };\r\n  },\r\n  [setFilters]: (state, action) => {\r\n    return { ...state, filter: action.payload };\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}