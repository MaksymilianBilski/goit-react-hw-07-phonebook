{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport { initialState } from './store';\nexport const rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'contacts/addContact':\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case 'contacts/removeContact':\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case 'contacts/setContacts':\n      return { ...state,\n        contacts: [...action.payload]\n      };\n\n    case 'contacts/setFilters':\n      return { ...state,\n        filter: action.payload\n      };\n\n    default:\n      return;\n  }\n};","map":{"version":3,"sources":["M:/programy/Programy_kodowanie/github/goit-react-hw-06-phonebook/src/redux/reducers.js"],"names":["combineReducers","initialState","rootReducer","state","action","type","contacts","payload","filter","contact","id"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAAtB,OAAP;;AACF,SAAK,wBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CACRC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OADzB;AAFL,OAAP;;AAMF,SAAK,sBAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYG,QAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACG,OAAX;AAAtB,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYK,QAAAA,MAAM,EAAEJ,MAAM,CAACG;AAA3B,OAAP;;AACF;AACE;AAfJ;AAiBD,CAlBM","sourcesContent":["import { combineReducers } from '@reduxjs/toolkit';\r\nimport { initialState } from './store';\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'contacts/addContact':\r\n      return { ...state, contacts: [...state.contacts, action.payload] };\r\n    case 'contacts/removeContact':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case 'contacts/setContacts':\r\n      return { ...state, contacts: [...action.payload] };\r\n    case 'contacts/setFilters':\r\n      return { ...state, filter: action.payload };\r\n    default:\r\n      return;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}