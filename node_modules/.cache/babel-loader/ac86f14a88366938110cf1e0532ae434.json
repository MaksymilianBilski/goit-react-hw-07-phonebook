{"ast":null,"code":"var _jsxFileName = \"M:\\\\programy\\\\Programy_kodowanie\\\\github\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactsList\\\\ContactsList.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport css from './ContactsList.module.css';\nimport { useEffect } from 'react';\nimport { addContact } from 'redux/contactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsList = () => {\n  _s();\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(addContact(contacts)));\n  const contactsFilter = contacts.filter(contact => contact.name.includes(filter));\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: css.list,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), contactsFilter.map(_ref => {\n      let {\n        id,\n        name,\n        number\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(ContactListItem, {\n        contact: {\n          id,\n          name,\n          number\n        }\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactsList, \"28UQwfbDMiRdTb2z85SZuEFOXPQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ContactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["M:/programy/Programy_kodowanie/github/goit-react-hw-06-phonebook/src/components/ContactsList/ContactsList.jsx"],"names":["useSelector","useDispatch","ContactListItem","getContacts","getFilter","css","useEffect","addContact","ContactsList","contacts","filter","dispatch","contactsFilter","contact","name","includes","list","map","id","number"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,4CAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,iBAAvC;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,QAAQ,GAAGT,WAAW,CAACG,WAAD,CAA5B;AACA,QAAMO,MAAM,GAAGV,WAAW,CAACI,SAAD,CAA1B;AACA,QAAMO,QAAQ,GAAGV,WAAW,EAA5B;AACAK,EAAAA,SAAS,CAAC,MAAMK,QAAQ,CAACJ,UAAU,CAACE,QAAD,CAAX,CAAf,CAAT;AACA,QAAMG,cAAc,GAAGH,QAAQ,CAACC,MAAT,CAAgBG,OAAO,IAC5CA,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBL,MAAtB,CADqB,CAAvB;AAIA,sBACE;AAAI,IAAA,SAAS,EAAEL,GAAG,CAACW,IAAnB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,cAAc,CAACK,GAAf,CAAmB;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMJ,QAAAA,IAAN;AAAYK,QAAAA;AAAZ,OAAD;AAAA,0BAClB,QAAC,eAAD;AAA0B,QAAA,OAAO,EAAE;AAAED,UAAAA,EAAF;AAAMJ,UAAAA,IAAN;AAAYK,UAAAA;AAAZ;AAAnC,SAAsBD,EAAtB;AAAA;AAAA;AAAA;AAAA,cADkB;AAAA,KAAnB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjBM;;GAAMV,Y;UACMR,W,EACFA,W,EACEC,W;;;KAHNO,Y","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\r\nimport { getContacts, getFilter } from 'redux/selectors';\r\nimport css from './ContactsList.module.css';\r\nimport { useEffect } from 'react';\r\nimport { addContact } from 'redux/contactsSlice';\r\n\r\nexport const ContactsList = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(addContact(contacts)));\r\n  const contactsFilter = contacts.filter(contact =>\r\n    contact.name.includes(filter)\r\n  );\r\n\r\n  return (\r\n    <ol className={css.list}>\r\n      <h5>Contacts</h5>\r\n      {contactsFilter.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} contact={{ id, name, number }} />\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}