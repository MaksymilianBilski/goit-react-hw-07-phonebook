{"ast":null,"code":"// import { useSelector, useDispatch } from 'react-redux';\n// import { getContacts } from 'redux/selectors';\n// import { setContacts } from 'redux/actions';\n// import { nanoid } from 'nanoid';\n// import css from './Form.module.css';\n// export const AddContacts = () => {\n//   const dispatch = useDispatch();\n//   const onFormSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     const name = form.elements.name;\n//     const number = form.elements.number;\n//     if (\n//       contacts.find(\n//         contact =>\n//           contact.name === name.value && contact.number === number.value\n//       )\n//     ) {\n//       alert(`${name.value} is already in contacts`);\n//       return;\n//     }\n//     const contact = {\n//       name: name.value,\n//       number: number.value,\n//       id: nanoid(),\n//     };\n//     //add single contact to local storage\n//     const newContacts = [...contacts, contact];\n//     dispatch(setContacts(newContacts));\n//     localStorage.setItem('contacts', JSON.stringify(newContacts));\n//     form.reset();\n//   };\n//   return (\n//     <>\n//       <form className={css.form} onSubmit={onFormSubmit}>\n//         <label>Name</label>\n//         <input\n//           className={css.name}\n//           type=\"text\"\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n//         <label>Number</label>\n//         <input\n//           className={css.number}\n//           type=\"tel\"\n//           name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//         />\n//         <button className={css.button}>Add contact</button>\n//       </form>\n//     </>\n//   );\n// };","map":{"version":3,"sources":["M:/programy/Programy_kodowanie/github/goit-react-hw-06-phonebook/src/components/Form/ContactsList.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { useSelector, useDispatch } from 'react-redux';\r\n// import { getContacts } from 'redux/selectors';\r\n// import { setContacts } from 'redux/actions';\r\n// import { nanoid } from 'nanoid';\r\n// import css from './Form.module.css';\r\n\r\n// export const AddContacts = () => {\r\n//   const dispatch = useDispatch();\r\n\r\n//   const onFormSubmit = e => {\r\n//     e.preventDefault();\r\n//     const form = e.currentTarget;\r\n//     const name = form.elements.name;\r\n//     const number = form.elements.number;\r\n//     if (\r\n//       contacts.find(\r\n//         contact =>\r\n//           contact.name === name.value && contact.number === number.value\r\n//       )\r\n//     ) {\r\n//       alert(`${name.value} is already in contacts`);\r\n//       return;\r\n//     }\r\n\r\n//     const contact = {\r\n//       name: name.value,\r\n//       number: number.value,\r\n//       id: nanoid(),\r\n//     };\r\n//     //add single contact to local storage\r\n//     const newContacts = [...contacts, contact];\r\n//     dispatch(setContacts(newContacts));\r\n//     localStorage.setItem('contacts', JSON.stringify(newContacts));\r\n//     form.reset();\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <form className={css.form} onSubmit={onFormSubmit}>\r\n//         <label>Name</label>\r\n//         <input\r\n//           className={css.name}\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//           required\r\n//         />\r\n//         <label>Number</label>\r\n//         <input\r\n//           className={css.number}\r\n//           type=\"tel\"\r\n//           name=\"number\"\r\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n//           required\r\n//         />\r\n//         <button className={css.button}>Add contact</button>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}