{"ast":null,"code":"var _jsxFileName = \"M:\\\\programy\\\\Programy_kodowanie\\\\github\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactsList\\\\ContactsList.jsx\",\n    _s = $RefreshSig$();\n\nimport { usePhonebookContext } from '../../context/PhonebookContext';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { setContacts } from 'redux/actions';\nimport { useEffect } from 'react';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport css from './ContactsList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsList = () => {\n  _s();\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter); // const filteredArray = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter.toLowerCase())\n  // );\n\n  const filteredArray = contacts;\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: css.list,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), filteredArray.map(_ref => {\n      let {\n        id,\n        name,\n        number\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(ContactListItem, {\n        contact: {\n          id,\n          name,\n          number\n        }\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactsList, \"1RfQgv040d7tk5SZf9pk5Spl3ow=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ContactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["M:/programy/Programy_kodowanie/github/goit-react-hw-06-phonebook/src/components/ContactsList/ContactsList.jsx"],"names":["usePhonebookContext","useSelector","useDispatch","getContacts","getFilter","setContacts","useEffect","ContactListItem","css","ContactsList","contacts","filter","filteredArray","list","map","id","name","number"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,gCAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,iBAAvC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,4CAAhC;AACA,OAAOC,GAAP,MAAgB,2BAAhB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,QAAQ,GAAGT,WAAW,CAACE,WAAD,CAA5B;AACA,QAAMQ,MAAM,GAAGV,WAAW,CAACG,SAAD,CAA1B,CAFgC,CAIhC;AACA;AACA;;AAEA,QAAMQ,aAAa,GAAGF,QAAtB;AAEA,sBACE;AAAI,IAAA,SAAS,EAAEF,GAAG,CAACK,IAAnB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,aAAa,CAACE,GAAd,CAAkB;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BACjB,QAAC,eAAD;AAA0B,QAAA,OAAO,EAAE;AAAEF,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA;AAAZ;AAAnC,SAAsBF,EAAtB;AAAA;AAAA;AAAA;AAAA,cADiB;AAAA,KAAlB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAlBM;;GAAMN,Y;UACMR,W,EACFA,W;;;KAFJQ,Y","sourcesContent":["import { usePhonebookContext } from '../../context/PhonebookContext';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts, getFilter } from 'redux/selectors';\r\nimport { setContacts } from 'redux/actions';\r\nimport { useEffect } from 'react';\r\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\r\nimport css from './ContactsList.module.css';\r\n\r\nexport const ContactsList = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n\r\n  // const filteredArray = contacts.filter(contact =>\r\n  //   contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  // );\r\n\r\n  const filteredArray = contacts;\r\n\r\n  return (\r\n    <ol className={css.list}>\r\n      <h5>Contacts</h5>\r\n      {filteredArray.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} contact={{ id, name, number }} />\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}