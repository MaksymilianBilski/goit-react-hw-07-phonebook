{"ast":null,"code":"var _jsxFileName = \"M:\\\\programy\\\\Programy_kodowanie\\\\github\\\\goit-react-hw-06-phonebook\\\\src\\\\context\\\\PhonebookContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, setContacts } from 'redux/actions';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PhonebookContext = /*#__PURE__*/createContext();\nexport const usePhonebookContext = () => {\n  _s();\n\n  return useContext(PhonebookContext);\n};\n\n_s(usePhonebookContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst PhonebookProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const dispatch = useDispatch(); // const [contacts, setContacts] = useState([]);\n\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('contacts')) === undefined || JSON.parse(localStorage.getItem('contacts')) === null) {\n      return;\n    }\n\n    const localUsers = JSON.parse(localStorage.getItem('contacts'));\n    dispatch(setContacts(...localUsers));\n  }, [dispatch]);\n  const contacts = useSelector(getContacts);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name;\n    const number = form.elements.number;\n\n    if (contacts.find(contact => contact.name === name.value && contact.number === number.value)) {\n      alert(`${name.value} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      name: name.value,\n      number: number.value,\n      id: nanoid()\n    }; //add single contact to local storage\n\n    const newContacts = [...contacts, contact];\n    dispatch(setContacts(newContacts));\n    localStorage.setItem('contacts', JSON.stringify(newContacts));\n    form.reset();\n  };\n\n  const onFilterChange = evt => {\n    setFilter(evt.target.value);\n  };\n\n  const onContactDelete = id => {\n    const contacts = getContacts();\n    const deletedContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(deletedContacts);\n    localStorage.setItem('contacts', JSON.stringify(deletedContacts));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PhonebookContext.Provider, {\n    value: {\n      onContactDelete,\n      onFilterChange,\n      onFormSubmit,\n      filter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PhonebookProvider, \"K0Z7iTEF43zslVn228Lxu3tni+Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PhonebookProvider;\nexport default PhonebookProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhonebookProvider\");","map":{"version":3,"sources":["M:/programy/Programy_kodowanie/github/goit-react-hw-06-phonebook/src/context/PhonebookContext.jsx"],"names":["useContext","createContext","useEffect","useState","nanoid","useDispatch","useSelector","addContact","setContacts","getContacts","getFilter","PhonebookContext","usePhonebookContext","PhonebookProvider","children","dispatch","filter","setFilter","JSON","parse","localStorage","getItem","undefined","localUsers","contacts","onFormSubmit","e","preventDefault","form","currentTarget","name","elements","number","find","contact","value","alert","id","newContacts","setItem","stringify","reset","onFilterChange","evt","target","onContactDelete","deletedContacts"],"mappings":"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","sourcesContent":["import { useContext, createContext, useEffect, useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact, setContacts } from 'redux/actions';\r\nimport { getContacts, getFilter } from 'redux/selectors';\r\n\r\nexport const PhonebookContext = createContext();\r\nexport const usePhonebookContext = () => useContext(PhonebookContext);\r\n\r\nconst PhonebookProvider = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n  // const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (\r\n      JSON.parse(localStorage.getItem('contacts')) === undefined ||\r\n      JSON.parse(localStorage.getItem('contacts')) === null\r\n    ) {\r\n      return;\r\n    }\r\n    const localUsers = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n    dispatch(setContacts(...localUsers));\r\n  }, [dispatch]);\r\n    const contacts = useSelector(getContacts);\r\n  const onFormSubmit = e => {\r\n\r\n\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const name = form.elements.name;\r\n    const number = form.elements.number;\r\n    if (\r\n      contacts.find(\r\n        contact =>\r\n          contact.name === name.value && contact.number === number.value\r\n      )\r\n    ) {\r\n      alert(`${name.value} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    const contact = {\r\n      name: name.value,\r\n      number: number.value,\r\n      id: nanoid(),\r\n    };\r\n    //add single contact to local storage\r\n    const newContacts = [...contacts, contact];\r\n    dispatch(setContacts(newContacts));\r\n    localStorage.setItem('contacts', JSON.stringify(newContacts));\r\n    form.reset();\r\n  };\r\n\r\n  const onFilterChange = evt => {\r\n    setFilter(evt.target.value);\r\n  };\r\n\r\n  const onContactDelete = id => {\r\n    const contacts = getContacts();\r\n    const deletedContacts = contacts.filter(contact => contact.id !== id);\r\n    setContacts(deletedContacts);\r\n    localStorage.setItem('contacts', JSON.stringify(deletedContacts));\r\n  };\r\n\r\n  return (\r\n    <PhonebookContext.Provider\r\n      value={{\r\n        onContactDelete,\r\n        onFilterChange,\r\n        onFormSubmit,\r\n        filter,\r\n      }}\r\n    >\r\n      {children}\r\n    </PhonebookContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PhonebookProvider;\r\n"]},"metadata":{},"sourceType":"module"}