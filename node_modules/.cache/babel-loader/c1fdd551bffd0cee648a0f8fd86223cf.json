{"ast":null,"code":"var _jsxFileName = \"M:\\\\programy\\\\Programy_kodowanie\\\\github\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactsList\\\\ContactsList.jsx\",\n    _s = $RefreshSig$();\n\nimport { usePhonebookContext } from '../../context/PhonebookContext';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { setContacts } from 'redux/actions';\nimport { useEffect } from 'react';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport css from './ContactsList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsList = () => {\n  _s();\n\n  const {\n    contacts,\n    filter\n  } = usePhonebookContext();\n  const filteredArray = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('contacts')) === undefined || JSON.parse(localStorage.getItem('contacts')) === null) {\n      return;\n    }\n\n    const localUsers = JSON.parse(localStorage.getItem('contacts'));\n    dispatch(setContacts(localUsers));\n  }, [dispatch]);\n\n  const onContactDelete = id => {\n    const deletedContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(deletedContacts);\n    localStorage.setItem('contacts', JSON.stringify(deletedContacts));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: css.list,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), filteredArray.map(_ref => {\n      let {\n        id,\n        name,\n        number\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(ContactListItem, {\n        contact: {\n          id,\n          name,\n          number\n        },\n        onDelete: onContactDelete\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactsList, \"wuvG3ioHPKgW6+xD5qjxWQWYrcg=\", false, function () {\n  return [usePhonebookContext, useDispatch];\n});\n\n_c = ContactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["M:/programy/Programy_kodowanie/github/goit-react-hw-06-phonebook/src/components/ContactsList/ContactsList.jsx"],"names":["usePhonebookContext","useSelector","useDispatch","getContacts","setContacts","useEffect","ContactListItem","css","ContactsList","contacts","filter","filteredArray","contact","name","toLowerCase","includes","dispatch","JSON","parse","localStorage","getItem","undefined","localUsers","onContactDelete","id","deletedContacts","setItem","stringify","list","map","number"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,gCAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,4CAAhC;AACA,OAAOC,GAAP,MAAgB,2BAAhB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBV,mBAAmB,EAAhD;AACA,QAAMW,aAAa,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,OAAO,IAC3CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,MAAM,CAACI,WAAP,EAApC,CADoB,CAAtB;AAIA,QAAME,QAAQ,GAAGd,WAAW,EAA5B;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,QACEY,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,MAAiDC,SAAjD,IACAJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,MAAiD,IAFnD,EAGE;AACA;AACD;;AACD,UAAME,UAAU,GAAGL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnB;AAEAJ,IAAAA,QAAQ,CAACZ,WAAW,CAACkB,UAAD,CAAZ,CAAR;AACD,GAVQ,EAUN,CAACN,QAAD,CAVM,CAAT;;AAYA,QAAMO,eAAe,GAAGC,EAAE,IAAI;AAC5B,UAAMC,eAAe,GAAGhB,QAAQ,CAACC,MAAT,CAAgBE,OAAO,IAAIA,OAAO,CAACY,EAAR,KAAeA,EAA1C,CAAxB;AACApB,IAAAA,WAAW,CAACqB,eAAD,CAAX;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCT,IAAI,CAACU,SAAL,CAAeF,eAAf,CAAjC;AACD,GAJD;;AAMA,sBACE;AAAI,IAAA,SAAS,EAAElB,GAAG,CAACqB,IAAnB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGjB,aAAa,CAACkB,GAAd,CAAkB;AAAA,UAAC;AAAEL,QAAAA,EAAF;AAAMX,QAAAA,IAAN;AAAYiB,QAAAA;AAAZ,OAAD;AAAA,0BACjB,QAAC,eAAD;AAEE,QAAA,OAAO,EAAE;AAAEN,UAAAA,EAAF;AAAMX,UAAAA,IAAN;AAAYiB,UAAAA;AAAZ,SAFX;AAGE,QAAA,QAAQ,EAAEP;AAHZ,SACOC,EADP;AAAA;AAAA;AAAA;AAAA,cADiB;AAAA,KAAlB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtCM;;GAAMhB,Y;UACkBR,mB,EAKZE,W;;;KANNM,Y","sourcesContent":["import { usePhonebookContext } from '../../context/PhonebookContext';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from 'redux/selectors';\r\nimport { setContacts } from 'redux/actions';\r\nimport { useEffect } from 'react';\r\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\r\nimport css from './ContactsList.module.css';\r\n\r\nexport const ContactsList = () => {\r\n  const { contacts, filter } = usePhonebookContext();\r\n  const filteredArray = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      JSON.parse(localStorage.getItem('contacts')) === undefined ||\r\n      JSON.parse(localStorage.getItem('contacts')) === null\r\n    ) {\r\n      return;\r\n    }\r\n    const localUsers = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n    dispatch(setContacts(localUsers));\r\n  }, [dispatch]);\r\n\r\n  const onContactDelete = id => {\r\n    const deletedContacts = contacts.filter(contact => contact.id !== id);\r\n    setContacts(deletedContacts);\r\n    localStorage.setItem('contacts', JSON.stringify(deletedContacts));\r\n  };\r\n\r\n  return (\r\n    <ol className={css.list}>\r\n      <h5>Contacts</h5>\r\n      {filteredArray.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          contact={{ id, name, number }}\r\n          onDelete={onContactDelete}\r\n        />\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}