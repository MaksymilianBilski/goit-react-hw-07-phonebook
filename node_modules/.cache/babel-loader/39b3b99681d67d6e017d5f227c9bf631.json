{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, removeContact, setContacts, setFilters } from './actions';\nexport const initialState = {\n  contacts: [],\n  filter: ''\n};\nconst state = initialState;\nexport const rootReducer = createReducer(state, {\n  [addContact]: (state, action) => {\n    state.contacts.push(action.payload);\n  },\n  [removeContact]: (state, action) => {\n    const index = state.contacts.find(contact => contact.id === action.payload);\n    state.contacts.splice(index, 1);\n  },\n  [setContacts]: (state, action) => {\n    return { ...state,\n      contacts: [...action.payload]\n    };\n  },\n  [setFilters]: (state, action) => {\n    return { ...state,\n      filter: action.payload\n    };\n  }\n});","map":{"version":3,"sources":["M:/programy/Programy_kodowanie/github/goit-react-hw-06-phonebook/src/redux/reducers.js"],"names":["createReducer","addContact","removeContact","setContacts","setFilters","initialState","contacts","filter","state","rootReducer","action","push","payload","index","find","contact","id","splice"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,WAApC,EAAiDC,UAAjD,QAAmE,WAAnE;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,MAAM,EAAE;AAFkB,CAArB;AAIP,MAAMC,KAAK,GAAGH,YAAd;AAEA,OAAO,MAAMI,WAAW,GAAGT,aAAa,CAACQ,KAAD,EAAQ;AAC9C,GAACP,UAAD,GAAc,CAACO,KAAD,EAAQE,MAAR,KAAmB;AAC/BF,IAAAA,KAAK,CAACF,QAAN,CAAeK,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACD,GAH6C;AAI9C,GAACV,aAAD,GAAiB,CAACM,KAAD,EAAQE,MAAR,KAAmB;AAClC,UAAMG,KAAK,GAAGL,KAAK,CAACF,QAAN,CAAeQ,IAAf,CAAoBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACE,OAArD,CAAd;AACAJ,IAAAA,KAAK,CAACF,QAAN,CAAeW,MAAf,CAAsBJ,KAAtB,EAA6B,CAA7B;AACD,GAP6C;AAQ9C,GAACV,WAAD,GAAe,CAACK,KAAD,EAAQE,MAAR,KAAmB;AAChC,WAAO,EAAE,GAAGF,KAAL;AAAYF,MAAAA,QAAQ,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX;AAAtB,KAAP;AACD,GAV6C;AAW9C,GAACR,UAAD,GAAc,CAACI,KAAD,EAAQE,MAAR,KAAmB;AAC/B,WAAO,EAAE,GAAGF,KAAL;AAAYD,MAAAA,MAAM,EAAEG,MAAM,CAACE;AAA3B,KAAP;AACD;AAb6C,CAAR,CAAjC","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, removeContact, setContacts, setFilters } from './actions';\r\n\r\nexport const initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\nconst state = initialState;\r\n\r\nexport const rootReducer = createReducer(state, {\r\n  [addContact]: (state, action) => {\r\n    state.contacts.push(action.payload);\r\n  },\r\n  [removeContact]: (state, action) => {\r\n    const index = state.contacts.find(contact => contact.id === action.payload);\r\n    state.contacts.splice(index, 1);\r\n  },\r\n  [setContacts]: (state, action) => {\r\n    return { ...state, contacts: [...action.payload] };\r\n  },\r\n  [setFilters]: (state, action) => {\r\n    return { ...state, filter: action.payload };\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}